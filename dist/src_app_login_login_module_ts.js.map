{"version":3,"file":"src_app_login_login_module_ts.js","mappings":"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","sources":["./src/app/core/storage/web.storage.ts","./src/app/login/auth.service.ts","./src/app/login/forgot-success/forgot-success.component.ts","./src/app/login/forgot/forgot.component.ts","./src/app/login/lockscreen/lockscreen.component.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login/login.component.ts","./src/app/login/otp/otp.component.ts","./src/app/login/register/register.component.ts","./src/app/login/reset/reset.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WebStorage {\r\n  public Loginvalue = new BehaviorSubject<any>(0);\r\n  public Createaccountvalue = new BehaviorSubject<any>(0);\r\n  public Forgotpasswordvalue = new BehaviorSubject<any>(0);\r\n  constructor(private router: Router) {}\r\n\r\n  /**\r\n   * Create account Function call from Registerpage\r\n   * @param uservalue from user form value\r\n   */\r\n   public Createaccount(uservalue: any): void {\r\n    let Rawdata = localStorage.getItem('Loginusers');\r\n    let Pdata: any = [];\r\n    Pdata = JSON.parse(Rawdata);\r\n    const Eresult: any = Pdata.find(({ email }) => email === uservalue.email);\r\n      if (Eresult) {\r\n        this.Createaccountvalue.next('This email are already exist');\r\n      } else {\r\n        Pdata.push(uservalue);\r\n        const jsonData = JSON.stringify(Pdata);\r\n        //localStorage.setItem('Loginusers', jsonData);\r\n        this.Login(uservalue);\r\n      }\r\n  }\r\n\r\n  /**\r\n   * Login Functionality call from Login\r\n   * @param uservalue from login page\r\n   */\r\n  public Login(uservalue: any): void {\r\n    let returndata={message:'',status:''}\r\n    let data = localStorage.getItem('Loginusers');\r\n    let Pdata: [] = JSON.parse(data);\r\n    const Eresult: any = Pdata.find(({ email }) => email === uservalue.email);\r\n    if (Eresult) {\r\n      if (Eresult.password === uservalue.password) {\r\n        this.Createtoken(uservalue);\r\n        this.Loginvalue.next('Login success');\r\n        this.router.navigate(['/layout/dashboard/admin']);\r\n        this.Loginvalue.next(0);\r\n      } else {\r\n        returndata.message='Incorrect password'\r\n        returndata.status='password'\r\n        this.Loginvalue.next(returndata);\r\n      }\r\n    } else {\r\n      returndata.message='Email is  not valid'\r\n      returndata.status='email'\r\n      this.Loginvalue.next(returndata);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create Token function for authendication\r\n   * @param uservalue recived from login function\r\n   */\r\n  public Createtoken(uservalue) {\r\n    var result = 'ABCDEFGHI' + uservalue.email + 'ghijklmnopqrs' + 'z01234567';\r\n    localStorage.setItem('LoginData', result);\r\n  }\r\n\r\n  /**\r\n   * Two Storage are used\r\n   */\r\n  public Deleteuser() {\r\n    localStorage.removeItem('Loginusers');\r\n    localStorage.removeItem('LoginData');\r\n  }\r\n\r\n  /**\r\n   * called from Login page init statement\r\n   */\r\n  public Checkuser(): void {\r\n    let users = localStorage.getItem('Loginusers');\r\n    if (users === null) {\r\n      let password = [\r\n        {\r\n          email: 'admin@dreamguys.in',\r\n          password: '123456',\r\n        },\r\n      ];\r\n      const jsonData = JSON.stringify(password);\r\n      //localStorage.setItem('Loginusers', jsonData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Forgot password function\r\n   * @param uservalue email object recived from Forgot password\r\n   */\r\n  public Forgotpassword(uservalue): void {\r\n    let Rawdata = localStorage.getItem('Loginusers');\r\n    let Pdata: any = [];\r\n    Pdata = JSON.parse(Rawdata);\r\n    const Eresult = Pdata.find(({ email }) => email === uservalue.email);\r\n    if (Eresult) {\r\n      this.Forgotpasswordvalue.next(Eresult);\r\n    } else {\r\n      this.Forgotpasswordvalue.next('Email Not Valid');\r\n    }\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { ForgotPasswordResponseModel } from '../sharing/models/forgotPasswordResponse.model';\nimport { ResponseModel } from '../sharing/models/master.model';\nimport { EmailModel, ResetPasswordModel } from '../sharing/models/shared.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  url: string = `${environment.url}api/`;\n  constructor(private http: HttpClient) { }\n\n  loginUser(param: any): Observable<ResponseModel> {\n    const headers = new HttpHeaders().append('Custom-Key', environment.Custom_Key)\n    return this.http.post<ResponseModel>(`${this.url}Login`, param, { headers });\n  }\n\n  forgotPassword(param: EmailModel) {\n    return this.http.post<ForgotPasswordResponseModel>(`${this.url}ForgotPassword`, param);\n  }\n\n  resetPassword(param: ResetPasswordModel) {\n    return this.http.post<ForgotPasswordResponseModel>(`${this.url}ForgotPassword/ResetPassword`, param);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { static_constants } from 'src/app/sharing/static';\n\n@Component({\n  selector: 'app-forgot-success',\n  templateUrl: './forgot-success.component.html',\n  styles: [\n  ]\n})\nexport class ForgotSuccessComponent implements OnInit {\n  static_constants = static_constants;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { WebStorage } from \"src/app/core/storage/web.storage\";\r\nimport { SpinnerComponent } from \"src/app/sharing/components/spinner/spinner.component\";\r\nimport { ForgotPasswordResponseModel } from \"src/app/sharing/models/forgotPasswordResponse.model\";\r\nimport { static_constants } from \"src/app/sharing/static\";\r\nimport { AuthService } from \"../auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-forgot\",\r\n  templateUrl: \"./forgot.component.html\",\r\n  styleUrls: [\"./forgot.component.css\"],\r\n})\r\nexport class ForgotComponent implements OnInit {\r\n  @ViewChild('spinner') spinner: SpinnerComponent;\r\n  static_constants = static_constants;\r\n  form = new FormGroup({\r\n    Email: new FormControl(\"\", [Validators.required, Validators.email]),\r\n  });\r\n  public CustomControler: any;\r\n  public subscription: Subscription;\r\n\r\n  constructor(private authService: AuthService, private toastr: ToastrService, private router: Router) { }\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n  ngOnInit() { }\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.spinner.showLoader();\r\n    this.authService.forgotPassword(this.form.value)\r\n      .subscribe((res: ForgotPasswordResponseModel) => {\r\n        this.spinner.hideLoader();\r\n        if (res.status == 'Fail') {\r\n          this.toastr.error(\"\", \"Invalid Email, Please try again.\");\r\n          return;\r\n        }\r\n        this.toastr.success(\"\", \"Email sent successfully!\");\r\n        this.router.navigate(['/login/forgot-success']);\r\n      })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-lockscreen',\r\n  templateUrl: './lockscreen.component.html',\r\n  styleUrls: ['./lockscreen.component.css']\r\n})\r\nexport class LockscreenComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ForgotComponent } from './forgot/forgot.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { OtpComponent } from './otp/otp.component';\r\nimport { LockscreenComponent } from './lockscreen/lockscreen.component';\r\nimport { ResetComponent } from './reset/reset.component';\r\nimport { ForgotSuccessComponent } from './forgot-success/forgot-success.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  { path: 'forgot', component: ForgotComponent },\r\n  { path: 'forgot-success', component: ForgotSuccessComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'otp', component: OtpComponent },\r\n  { path: 'lockscreen', component: LockscreenComponent },\r\n  { path: 'reset/:token', component: ResetComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { ForgotComponent } from './forgot/forgot.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { OtpComponent } from './otp/otp.component';\r\nimport { LockscreenComponent } from './lockscreen/lockscreen.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SharingModule } from '../sharing/sharing.module';\nimport { ResetComponent } from './reset/reset.component';\nimport { ForgotSuccessComponent } from './forgot-success/forgot-success.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, ForgotComponent, RegisterComponent, OtpComponent, LockscreenComponent, ResetComponent, ForgotSuccessComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    ReactiveFormsModule,\r\n    SharingModule\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AppService } from \"src/app/app.service\";\r\nimport { WebStorage } from \"src/app/core/storage/web.storage\";\r\nimport { SpinnerComponent } from \"src/app/sharing/components/spinner/spinner.component\";\r\nimport { ResponseModel } from \"src/app/sharing/models/master.model\";\r\nimport { static_constants } from \"src/app/sharing/static\";\r\nimport { AuthService } from \"../auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.css\"],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  @ViewChild('spinner') spinner: SpinnerComponent;\r\n  public CustomControler;\r\n  public Toggledata = true;\r\n  static_constants = static_constants;\r\n  form = new FormGroup({\r\n    Email: new FormControl(\"\", [Validators.required]),\r\n    Password: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  constructor(private _authService: AuthService,private toastr: ToastrService, private _appService: AppService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  submit() {\r\n    this.form.markAllAsTouched();\r\n    //this.storage.Login(this.form.value);\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.spinner.showLoader();\r\n    this._authService.loginUser(this.form.value).subscribe((res: ResponseModel) => {\r\n      if (!res.responseMsg.isError) {\r\n        this._appService.setStorageData('_A', res.responseData.data);\r\n        this._appService.setStorageData('_T', res._tokenData);\r\n        this.router.navigate(['/layout/dashboard/admin']);\r\n      } else {\r\n        this.toastr.error(\"\", \"Invalid Email/Password, Please try again.\");\r\n      }\r\n      this.spinner.hideLoader();\r\n    }, err => this.spinner.hideLoader())\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    //this.subscription.unsubscribe();\r\n  }\r\n\r\n  iconLogle() {\r\n    this.Toggledata = !this.Toggledata\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-otp',\r\n  templateUrl: './otp.component.html',\r\n  styleUrls: ['./otp.component.css']\r\n})\r\nexport class OtpComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { WebStorage } from \"src/app/core/storage/web.storage\";\r\n\r\n@Component({\r\n  selector: \"app-register\",\r\n  templateUrl: \"./register.component.html\",\r\n  styleUrls: [\"./register.component.css\"],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  public isvalidconfirmpassword: boolean = false;\r\n  public subscription: Subscription;\r\n  public CustomControler: any;\r\n\r\n  form = new FormGroup({\r\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\r\n    password: new FormControl(\"\", [Validators.required]),\r\n    confirmPassword: new FormControl(\"\", [Validators.required]),\r\n  });\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  constructor(private storage: WebStorage) {\r\n    this.subscription = this.storage.Createaccountvalue.subscribe((data) => {\r\n      this.CustomControler = data;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  submit() {\r\n    if (this.form.value.password != this.form.value.confirmPassword) {\r\n      this.isvalidconfirmpassword = true;\r\n    } else {\r\n      this.isvalidconfirmpassword = false;\r\n      this.storage.Createaccount(this.form.value);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\nimport { WebStorage } from 'src/app/core/storage/web.storage';\nimport { SpinnerComponent } from 'src/app/sharing/components/spinner/spinner.component';\nimport { ForgotPasswordResponseModel } from 'src/app/sharing/models/forgotPasswordResponse.model';\nimport { static_constants } from 'src/app/sharing/static';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.component.html',\n  styleUrls: ['./reset.component.css']\n})\nexport class ResetComponent implements OnInit {\n  @ViewChild('spinner') spinner: SpinnerComponent;\n  static_constants = static_constants;\n  form: FormGroup;\n  public CustomControler: any;\n  public subscription: Subscription;\n  public TogglePdata = true;\n  public ToggleCPdata = true;\n  constructor(private router: Router, private activatedRoute: ActivatedRoute, private fb: FormBuilder, private _authService: AuthService, private toastr: ToastrService) { }\n  get f() {\n    return this.form.controls;\n  }\n  ngOnInit() {\n    this.activatedRoute.snapshot.paramMap.get('token');\n    this.form = this.fb.group({\n      Password: new FormControl(\"\", [Validators.required, Validators.minLength(6), Validators.maxLength(25), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-zd$@$!%*?&].{5,25}')]),\n      ConfirmPassword: new FormControl(\"\", [Validators.required, Validators.minLength(6), Validators.maxLength(25), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-zd$@$!%*?&].{5,25}')]),\n      Token: new FormControl(this.activatedRoute.snapshot.paramMap.get('token'))\n    }, { validator: this.passwordErrorValidator })\n  }\n  submit() {\n    this.spinner.showLoader();\n    this._authService.resetPassword(this.form.value).subscribe((res: ForgotPasswordResponseModel) => {\n      this.spinner.hideLoader();\n      if (res.status == 'Fail') {\n        return;\n      }\n      this.toastr.success(\"\", \"Password reset successfully.\");\n      this.router.navigate(['/login']);\n    })\n\n  }\n\n  passwordErrorValidator: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\n    const password = control.get('Password');\n    const repeatPassword = control.get('ConfirmPassword');\n    return password.value != repeatPassword.value ? { 'passwordError': true } : null;\n  };\n\n\n  iconLogle(flag) {\n    switch (flag) {\n      case \"C\":\n        this.TogglePdata = !this.TogglePdata;\n        break;\n      case \"CP\":\n        this.ToggleCPdata = !this.ToggleCPdata;\n        break;\n    }\n\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}